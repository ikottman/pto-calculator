{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/calendar/Calendar.svelte",
    "../src/components/calendar/Month.svelte",
    "../src/components/calendar/Day.svelte",
    "../src/components/PtoCalculator.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n\n  // expand Date object for easier formatting\n  Date.prototype.daysInMonth = function() {\n    let date = new Date(this.getFullYear(), this.getMonth() + 1, 0);\n    return date.getDate();\n  };\n\n  Date.prototype.getFullMonth = function() {\n    return this.toLocaleString('default', { month: 'long' });\n  };\n\n  Date.prototype.getFullDay = function() {\n    return this.toLocaleString('default', { weekday: 'long' });\n  };\n\n  // get the first day of each month of the current year\n  const currentYear = new Date().getFullYear();\n  const dates = Array(12).fill(0).map((_, index) => new Date(currentYear, index));\n</script>\n\n<style>\n  .container {\n    display: inline-grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 20px;\n    justify-items: center;\n  }\n</style>\n\n<div class='container'>\n  {#each dates as month}\n    <Month name={month.getFullMonth()} days={month.daysInMonth()} firstDay={month.getFullDay()} date={month}/>\n  {/each}\n</div>",
    "<script>\n  import Day from './Day.svelte';\n  export let name;\n  export let days;\n  export let firstDay;\n  export let date;\n\n  function day(month, dayNum) {\n    const date = new Date(month.getFullYear(), month.getMonth(), dayNum);\n    return {\n      label: dayNum,\n      date: date\n    }\n  }\n\n  const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  let dayIndex = weekdays.findIndex(d => d === firstDay);\n  const fillerDay = {\n      label: ''\n    };\n  let week = Array(dayIndex).fill(fillerDay);\n  const header = weekdays.map(day => {return {label: day[0]} });\n  const month = [header];\n  for (let i = 1; i <= days; i++) {\n    week.push(day(date, i));\n\n    // start over when we hit saturday\n    if (dayIndex == 6 || i == days) {\n      dayIndex = 0;\n      month.push(week);\n      week = [];\n    } else {\n      dayIndex++;\n    }\n  }\n</script>\n\n<style>\n.container {\n  display: inline-grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: 1px;\n  justify-items: center;\n}\n\nh2 {\n  grid-column: 1 / 8;\n  margin: 0px;\n}\n</style>\n\n<div class=\"container\">\n  <h2>{name}</h2>\n  {#each month as week}\n      {#each week as day}\n        <Day label={day.label} date={day.date}/>\n      {/each}\n  {/each}\n</div>\n",
    "<script>\n  import { selectedDays } from './store.js'\n  import { get } from 'svelte/store'\n  export let label;\n  export let date;\n\n  function onClick() {\n    if (!date) { return; }\n\n    if ($selectedDays.includes(date)) {\n      // unselect\n      selectedDays.update(existing => $selectedDays.filter(d => d !== date));\n    } else {\n      // select\n      selectedDays.update(existing => [...existing, date]);\n    }\n  }\n\n  let id = !!date ? \"day\" : \"header\";\n  $: selected = date ? $selectedDays.some(selectedDay => selectedDay.getTime() === date.getTime()) : false;\n  $: unselected = !selected;\n</script>\n\n<style>\n  div {\n    user-select: none;\n  }\n\n  #header {\n    font-weight: bold;\n  }\n\n  #day {\n    text-align: center;\n    border-radius: 50%;\n    width: 1.2rem;\n    height: 1.2rem;\n    line-height: 1.2rem;\n    padding: 3px;\n    transition: background-color 100ms linear;\n    cursor: pointer;\n  }\n\n  #day.unselected:hover {\n    background-color: #d2e3fc;\n    color: black;\n  }\n\n  #day.selected {\n    background-color: #1a73e8;\n    color: white;\n  }\n\n  #day.unselected {\n    background-color: white;\n    color: black;\n  }\n</style>\n\n<div {id} class:selected class:unselected on:click={onClick}>{label}</div>",
    "<script>\n  import { selectedDays } from './calendar/store.js'\n  import { get } from 'svelte/store'\n\n  function isSunday(date) {\n    return date.getDay() === 0;\n  }\n\n  function incrementDay(date) {\n    date.setDate(date.getDate() + 1);\n  }\n\n  function weeksBetweenDates(start, end) {\n    let date = new Date(start.getTime());\n    let numSundays = 0;\n    do {\n      incrementDay(date);\n      if (isSunday(date)) { \n        numSundays++; \n      }\n    } while (date.getTime() < end.getTime())\n\n    return numSundays;\n  }\n\n  let starting = 0;\n  let velocity = 0;\n  let today = new Date();\n  let nextYear = new Date(today.getFullYear() + 1, 0, 1);\n  $: plannedPto = $selectedDays.length * 8;\n  $: gainedPto = weeksBetweenDates(today, nextYear) * velocity;\n  $: predicted = Math.floor(starting + gainedPto - plannedPto );\n</script>\n\n<style>\n.container {\n  display: inline-grid;\n  grid-template-columns: repeat(2, 1fr);\n  align-items: center;\n  grid-gap: 5px;\n}\n\n.row {\n  height: 1rem;\n}\n</style>\n\n<div class='container'>\n  <span>Weekly Accrual Rate</span> \n  <span>Starting PTO (hours):</span>\n  <input type=number step=0.0001 bind:value={velocity} min=0>\n  <input type=number bind:value={starting} min=0>\n  <span>Planned PTO (hours):</span>\n  <span>End of Year Balance (hours):</span>\n  <span>{$selectedDays.length}</span>\n  <span>{predicted}</span>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAuBE,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,WAAW,CACpB,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,IAAI,CACd,aAAa,CAAE,MAAM,AACvB,CAAC;ACUH,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,WAAW,CACpB,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,GAAG,CACb,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,MAAM,CAAE,GAAG,AACb,CAAC;ACxBC,GAAG,cAAC,CAAC,AACH,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,MAAM,CACd,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,MAAM,CACzC,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,IAAI,yBAAW,MAAM,AAAC,CAAC,AACrB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,IAAI,SAAS,cAAC,CAAC,AACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,IAAI,WAAW,cAAC,CAAC,AACf,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,KAAK,AACd,CAAC;ACrBH,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,WAAW,CACpB,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,GAAG,AACf,CAAC"
}